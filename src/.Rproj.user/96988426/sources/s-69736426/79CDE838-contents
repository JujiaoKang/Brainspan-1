---
title: "Autism-Part3"
author: "chenhy"
date: "2020/6/22"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r library packages, message=FALSE, warning=FALSE, include=FALSE}
library(NetBID2)
library(factoextra) #for cluster
library(tidyverse)
library(stringr)
library(cluster)
```

## EWAS for Autism phenotype
Significant genes
```{r sig_genes, echo=TRUE}
gene_ttest <- read.csv("/cluster/home/chenhy/project/autism/result/gene_ttest.csv",header = T,stringsAsFactors = F) 
autism_gene <- read.table(file = "/cluster/home/chenhy/project/neuron_drivers_landscape/data/C1510586_disease_gda_summary.tsv",sep = "\t",quote = "",header = T,stringsAsFactors = F)
gene_ttest <- gene_ttest %>% left_join(select(autism_gene,Gene,Score_gda) %>% rename(Dis_gene=Gene),by="Dis_gene")
#out2excel(gene_ttest,out.xlsx = "/cluster/home/chenhy/project/autism/result/sig_gene.xlsx")
gene_ttest_select <- gene_ttest %>% .[which(.$Percentage_of_sig_from_permutation > 0.6),] %>% .[,c(1:3,6:8,19)] %>% unique() %>% .[order(.$p),]

if(nrow(gene_ttest_select)<20){
kableExtra::kable(gene_ttest_select,align = "c") %>%
  kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
  kableExtra::scroll_box(width = "100%", height = "100%")
}else{
  kableExtra::kable(gene_ttest_select,align = "c") %>%
  kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
  kableExtra::scroll_box(width = "100%", height = "500px")
}
```

Significant variant
```{r sig_variant, echo=TRUE}
variant_final <- read.csv("/cluster/home/chenhy/project/autism/result/variant_fisher.csv",header = T,stringsAsFactors = F) %>% .[,c(1:3,5:10)] %>% unique() %>% mutate(log_p=-log10(p))
variant_final$Gene <- stringr::str_split(variant_final$Dis_variant,":",simplify=T)[,1]
variant_final$HGVS <- stringr::str_c(stringr::str_split(variant_final$Dis_variant,":",simplify=T)[,2],":",stringr::str_split(variant_final$Dis_variant,":",simplify=T)[,3],":",stringr::str_split(variant_final$Dis_variant,":",simplify=T)[,4])
variant_final <- variant_final %>% left_join(select(autism_gene,Gene,Score_gda),by="Gene")
#out2excel(variant_final,out.xlsx = "/cluster/home/chenhy/project/autism/result/sig_variant.xlsx")
variant_select <- variant_final %>% .[!is.na(.$Percentage_of_sig_from_permutation),] %>% mutate(Percentage_of_sig_from_permutation=Percentage_of_sig_from_permutation*10) %>%  .[which(.$Percentage_of_sig_from_permutation > 0.8),] %>% unique() %>% .[order(.$p),]

if(nrow(gene_ttest_select)<20){
kableExtra::kable(variant_select,align = "c") %>%
  kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
  kableExtra::scroll_box(width = "100%", height = "100%")
}else{
  kableExtra::kable(variant_select,align = "c") %>%
  kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
  kableExtra::scroll_box(width = "100%", height = "500px")
}
```
```{r qqplot, echo=TRUE, message=FALSE, warning=FALSE,fig.width=9}
qqnorm(variant_final$log_p);qqline(variant_final$log_p,probs = c(0.025,0.975))
```

### Function enrichment of EWAS sig genes

```{r sig_genes_enrichment, echo=TRUE, message=FALSE, warning=FALSE,fig.width=9}
gs.preload(use_spe='Homo sapiens',update=FALSE)
use_gene <- read.table(file = "/cluster/apps/refseq/Gene_panel/Clear_seq/gene.lst", col.names = "Dis_gene")
ench_up <- funcEnrich.Fisher(input_list=gene_ttest$Dis_gene,
  bg_list=use_gene$Dis_gene,
  use_gs=c('H','C5'),
  Pv_thre=0.1,Pv_adj = 'none')
draw.funcEnrich.cluster(funcEnrich_res=ench_up,top_number=20,gs_cex = 1,
  gene_cex=1,pv_cex=0.8,
  cluster_gs=TRUE,cluster_gene = TRUE)
```





